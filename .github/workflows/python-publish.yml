name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Clean previous builds
        run: rm -rf dist/*

      - name: Build release distributions
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: release-build
    permissions:
      id-token: write
    environment:
      name: pypi
      # Optional: uncomment and update if you want a PyPI link in deployment status
      # url: https://pypi.org/project/YOURPROJECT/

    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish latest distribution to PyPI
        run: |
          python -m pip install --upgrade twine
          latest_file=$(ls -t dist/*.whl | head -n 1)
          echo "Uploading $latest_file to PyPI..."
          twine upload --non-interactive --skip-existing "$latest_file"
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
